worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream definitions
    upstream user-service {
        least_conn;
        server user-service:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream campus-service {
        least_conn;
        server campus-service:3002 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream payroll-service {
        least_conn;
        server payroll-service:3003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Health check endpoint
    server {
        listen 8080;
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main server configuration
    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Request size limits
        client_max_body_size 50M;
        client_body_buffer_size 1M;
        client_header_buffer_size 8k;
        large_client_header_buffers 8 16k;

        # Timeouts
        client_body_timeout 12;
        client_header_timeout 12;
        keepalive_timeout 15;
        send_timeout 10;

        # API Gateway routes with rate limiting
        location /api/auth {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://user-service;
            include /etc/nginx/proxy_params;
        }

        location /api/users {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://user-service;
            include /etc/nginx/proxy_params;
        }

        location /api/campus {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://campus-service;
            include /etc/nginx/proxy_params;
        }

        location /api/payroll {
            limit_req zone=api burst=15 nodelay;
            proxy_pass http://payroll-service;
            include /etc/nginx/proxy_params;
        }

        # Storage endpoints (with larger file support)
        location /api/storage {
            limit_req zone=api burst=10 nodelay;
            client_max_body_size 100M;
            client_body_timeout 300;
            proxy_read_timeout 300;
            proxy_send_timeout 300;
            proxy_pass http://user-service; # Storage controller is in shared library
            include /etc/nginx/proxy_params;
        }

        # Monitoring endpoints (restricted access)
        location /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            }
            
            proxy_pass http://user-service/metrics; # Assuming metrics endpoint on user service
            include /etc/nginx/proxy_params;
        }

        # Health checks
        location /health {
            access_log off;
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Default error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            return 404 '{"error":"Not Found","message":"The requested resource was not found","statusCode":404}';
            add_header Content-Type application/json;
        }
        
        location = /50x.html {
            return 500 '{"error":"Internal Server Error","message":"An internal server error occurred","statusCode":500}';
            add_header Content-Type application/json;
        }
    }

    # SSL server (uncomment and configure for HTTPS)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:MozTLS:10m;
    #     ssl_session_tickets off;
    #
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     add_header Strict-Transport-Security "max-age=63072000" always;
    #
    #     # Same location blocks as HTTP server
    # }
}

# Create proxy_params file
# This would typically be included in the main Nginx installation